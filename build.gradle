plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://jitpack.io'}
	maven { url = "https://maven.terraformersmc.com/releases/"}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven { url = 'https://maven.minecraftforge.net/' }
	maven { url = 'https://maven.shedaniel.me/' }
	maven { url = 'https://maven.isxander.dev/releases' }
	maven { url = "https://maven.kyrptonaught.dev"}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// fabric shield lib and depends
	modImplementation include ("com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}")
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modImplementation "com.github.Chocohead:Fabric-ASM:v${project.fabricasm_version}"
	// dev qol
	modLocalRuntime("maven.modrinth:lazydfu:${lazydfu_version}")
	modLocalRuntime "com.terraformersmc:modmenu:${project.mod_menu_version}"

	// ---- MOD COMPATS ---
	// natures spirit
	modCompileOnly "maven.modrinth:WBvnqHfV:${project.natures_spirit_version}"
	modRuntimeOnly "maven.modrinth:WBvnqHfV:${project.natures_spirit_version}"
	modLocalRuntime "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}"
//	modImplementation "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}"
	// deeper and darker
	modCompileOnly "maven.modrinth:deeperdarker:${deeperanddarker_version}"
	modRuntimeOnly "maven.modrinth:deeperdarker:${deeperanddarker_version}"
	modLocalRuntime "dev.isxander:yet-another-config-lib:${project.yacl_version}+${minecraft_version}-fabric"
	modLocalRuntime("net.kyrptonaught:customportalapi:${project.customportalapi_version}")
	// better end
//	modCompileOnly "maven.modrinth:betterend:${project.betterend_version}"
//	modRuntimeOnly "maven.modrinth:betterend:${project.betterend_version}"
//	modImplementation "com.github.quiqueck:BCLib:${project.bclib_version}"
//	modImplementation "com.github.quiqueck:Wunderlib:${project.wunderlib_version}"
//	include "com.github.quiqueck:WunderLib:${project.wunderlib_version}"


}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}